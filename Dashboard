import streamlit as st
import pandas as pd
import plotly.express as px

# Carregamento do dataset (substituir pelo caminho correto se necessário)
@st.cache_data
def load_data():
    df = pd.read_csv('dados/df_full.csv', parse_dates=['order_purchase_timestamp', 'order_delivered_customer_date'])
    df['tempo_entrega'] = (df['order_delivered_customer_date'] - df['order_purchase_timestamp']).dt.days
    return df.dropna(subset=['review_score', 'tempo_entrega'])

df = load_data()

# Filtros
st.sidebar.title("Filtros")
categorias = df['product_category_name'].dropna().unique()
estados = df['customer_state'].dropna().unique()

categoria_sel = st.sidebar.multiselect("Categoria de Produto", categorias)
estado_sel = st.sidebar.multiselect("Estado do Cliente", estados)
periodo = st.sidebar.date_input("Período de Compra", [df['order_purchase_timestamp'].min(), df['order_purchase_timestamp'].max()])

# Aplicar filtros
if categoria_sel:
    df = df[df['product_category_name'].isin(categoria_sel)]
if estado_sel:
    df = df[df['customer_state'].isin(estado_sel)]
df = df[(df['order_purchase_timestamp'] >= pd.to_datetime(periodo[0])) & (df['order_purchase_timestamp'] <= pd.to_datetime(periodo[1]))]

# Agrupamento por vendedor
df_seller_summary = df.groupby('seller_id').agg({
    'order_id': 'nunique',
    'review_score': 'mean',
    'tempo_entrega': 'mean'
}).reset_index()
df_seller_summary.columns = ['seller_id', 'num_pedidos', 'media_avaliacao', 'media_tempo_entrega']

# Score para ranking
df_seller_summary['score'] = (
    df_seller_summary['num_pedidos'].rank(ascending=False) +
    df_seller_summary['media_avaliacao'].rank(ascending=False) +
    df_seller_summary['media_tempo_entrega'].rank(ascending=True)
)

# Título
st.title("📦 Dashboard de Vendedores - Olist")
st.markdown("Analise os melhores vendedores com base em volume de vendas, avaliação e tempo de entrega.")

# Top 10 por volume de vendas
st.subheader("🔝 Top 10 - Volume de Vendas")
top_vendas = df_seller_summary.sort_values(by='num_pedidos', ascending=False).head(10)
fig_vendas = px.bar(top_vendas, x='seller_id', y='num_pedidos', title='Top 10 Vendedores por Nº de Pedidos')
st.plotly_chart(fig_vendas)

# Top 10 por avaliação
st.subheader("🌟 Top 10 - Avaliação Média")
top_avaliacao = df_seller_summary.sort_values(by='media_avaliacao', ascending=False).head(10)
fig_avaliacao = px.bar(top_avaliacao, x='seller_id', y='media_avaliacao', title='Top 10 Vendedores por Avaliação Média')
st.plotly_chart(fig_avaliacao)

# Top 10 mais rápidos na entrega
st.subheader("🚚 Top 10 - Tempo de Entrega")
top_entrega = df_seller_summary.sort_values(by='media_tempo_entrega').head(10)
fig_entrega = px.bar(top_entrega, x='seller_id', y='media_tempo_entrega', title='Top 10 Vendedores mais Rápidos')
st.plotly_chart(fig_entrega)

# Ranking geral
st.subheader("🏆 Ranking Geral de Vendedores")
melhores = df_seller_summary.sort_values(by='score').head(10)
st.dataframe(melhores[['seller_id', 'num_pedidos', 'media_avaliacao', 'media_tempo_entrega', 'score']])
